import numpy as np
import random
import matplotlib.pyplot as plt
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Conv2D,MaxPooling2D,Dense,Flatten
#load dataset

X_train =np.loadtxt(r'C:/Users/sumiya/Downloads/CNN/Image Classification CNN Keras Dataset/input.csv',delimiter=',',encoding='utf-8')
Y_train =np.loadtxt(r'C:/Users/sumiya/Downloads/CNN/Image Classification CNN Keras Dataset/labels.csv',delimiter=',',encoding='utf-8')

X_test =np.loadtxt(r'C:/Users/sumiya/Downloads/CNN/Image Classification CNN Keras Dataset/input_test.csv',delimiter=',',encoding='utf-8')
Y_test =np.loadtxt(r'C:/Users/sumiya/Downloads/CNN/Image Classification CNN Keras Dataset/labels_test.csv',delimiter=',',encoding='utf-8')
#Reshape

X_train = X_train.reshape(len(X_train),100,100,3)
Y_train = Y_train.reshape(len(Y_train),1)

X_test = X_test.reshape(len(X_test),100,100,3)
Y_test = Y_test.reshape(len(Y_test),1)

X_train = X_train/255.0
X_test = X_test/255.0

#verify shape
print("Shape of X_train: ",X_train.shape)
print("Shape of Y_train: ",Y_train.shape)
print("Shape of X_test: ",X_test.shape)
print("Shape of Y_test: ",Y_test.shape)

idx = random.randint(0, len(X_train)) 
plt.imshow(X_train[idx, :])
plt.show()

model = Sequential([
    Conv2D(32, (3,3) , activation = 'relu' , input_shape = (100,100,3)),   #32 no of filters of size 3*3 input shape is given to only first layer
    MaxPooling2D((3,3)),  #filter size

    Conv2D(32,(3,3),activation = 'relu'), 
    MaxPooling2D((3,3)),

    Flatten(),
    Dense(64, activation = 'relu'),#64 neurons
    Dense(1, activation = 'sigmoid') #fully connected layer
])

model.compile(loss = 'binary_crossentropy',optimizer = 'adam', metrics =['accuracy'])

model.fit( X_train, Y_train, epochs = 10 ,batch_size=64)
model.evaluate(X_test , Y_test)

# Making predictions
idx2 = random.randint(0, len(Y_test))
plt.imshow(X_test[idx2, :])
plt.show()

y_pred = model.predict(X_test[idx2, :].reshape(1,100,100,3))
y_pred  = y_pred>0.5
if(y_pred == 0):
    pred = 'dog'
else:
    pred = 'cat'

print("Our model says it is a:",pred)


